// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CooccurrenceNetworkPoolsColumns holds the columns for the "cooccurrence_network_pools" table.
	CooccurrenceNetworkPoolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "site_url", Type: field.TypeString, Unique: true},
		{Name: "titles", Type: field.TypeJSON},
		{Name: "descriptions", Type: field.TypeJSON},
	}
	// CooccurrenceNetworkPoolsTable holds the schema information for the "cooccurrence_network_pools" table.
	CooccurrenceNetworkPoolsTable = &schema.Table{
		Name:       "cooccurrence_network_pools",
		Columns:    CooccurrenceNetworkPoolsColumns,
		PrimaryKey: []*schema.Column{CooccurrenceNetworkPoolsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "cooccurrencenetworkpool_id",
				Unique:  true,
				Columns: []*schema.Column{CooccurrenceNetworkPoolsColumns[0]},
			},
			{
				Name:    "cooccurrencenetworkpool_id_site_url",
				Unique:  true,
				Columns: []*schema.Column{CooccurrenceNetworkPoolsColumns[0], CooccurrenceNetworkPoolsColumns[1]},
			},
		},
	}
	// FeedAuditTrailActionsColumns holds the columns for the "feed_audit_trail_actions" table.
	FeedAuditTrailActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "action", Type: field.TypeString, Unique: true},
	}
	// FeedAuditTrailActionsTable holds the schema information for the "feed_audit_trail_actions" table.
	FeedAuditTrailActionsTable = &schema.Table{
		Name:       "feed_audit_trail_actions",
		Columns:    FeedAuditTrailActionsColumns,
		PrimaryKey: []*schema.Column{FeedAuditTrailActionsColumns[0]},
	}
	// FeedAuditTrailLogsColumns holds the columns for the "feed_audit_trail_logs" table.
	FeedAuditTrailLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "action_id", Type: field.TypeInt},
	}
	// FeedAuditTrailLogsTable holds the schema information for the "feed_audit_trail_logs" table.
	FeedAuditTrailLogsTable = &schema.Table{
		Name:       "feed_audit_trail_logs",
		Columns:    FeedAuditTrailLogsColumns,
		PrimaryKey: []*schema.Column{FeedAuditTrailLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "feed_audit_trail_logs_feed_audit_trail_actions_action",
				Columns:    []*schema.Column{FeedAuditTrailLogsColumns[2]},
				RefColumns: []*schema.Column{FeedAuditTrailActionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "feedaudittraillog_id",
				Unique:  true,
				Columns: []*schema.Column{FeedAuditTrailLogsColumns[0]},
			},
		},
	}
	// FeedsColumns holds the columns for the "baseFeeds" table.
	FeedsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "site_url", Type: field.TypeString, Default: ""},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "description", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "feed_url", Type: field.TypeString, Default: ""},
		{Name: "language", Type: field.TypeString, Default: ""},
		{Name: "dt_created", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "dt_updated", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "favorites", Type: field.TypeInt64, Default: 0},
	}
	// FeedsTable holds the schema information for the "baseFeeds" table.
	FeedsTable = &schema.Table{
		Name:       "baseFeeds",
		Columns:    FeedsColumns,
		PrimaryKey: []*schema.Column{FeedsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "feeds_id",
				Unique:  true,
				Columns: []*schema.Column{FeedsColumns[0]},
			},
			{
				Name:    "feeds_site_url_feed_url",
				Unique:  true,
				Columns: []*schema.Column{FeedsColumns[1], FeedsColumns[4]},
			},
			{
				Name:    "feeds_id_feed_url",
				Unique:  true,
				Columns: []*schema.Column{FeedsColumns[0], FeedsColumns[4]},
			},
			{
				Name:    "feeds_id_dt_updated",
				Unique:  true,
				Columns: []*schema.Column{FeedsColumns[0], FeedsColumns[7]},
			},
			{
				Name:    "idx_feeds_dt_updated_feed_url",
				Unique:  false,
				Columns: []*schema.Column{FeedsColumns[7], FeedsColumns[4]},
				Annotation: &entsql.IndexAnnotation{
					Desc: true,
				},
			},
			{
				Name:    "feeds_title",
				Unique:  false,
				Columns: []*schema.Column{FeedsColumns[2]},
				Annotation: &entsql.IndexAnnotation{
					Types: map[string]string{
						"mysql":    "FULLTEXT",
						"postgres": "GIN",
					},
				},
			},
		},
	}
	// FollowListsColumns holds the columns for the "follow_lists" table.
	FollowListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "xml_version", Type: field.TypeInt8, Default: 1},
		{Name: "rss_version", Type: field.TypeInt8, Default: 2},
		{Name: "url", Type: field.TypeString, Default: ""},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "description", Type: field.TypeString, Default: ""},
		{Name: "link", Type: field.TypeString, Default: ""},
		{Name: "links", Type: field.TypeJSON},
		{Name: "item_description", Type: field.TypeJSON},
		{Name: "language", Type: field.TypeString, Default: ""},
		{Name: "dt_created", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "dt_updated", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "dt_last_inserted", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "feed_category", Type: field.TypeInt, Default: 0},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "is_favorite", Type: field.TypeBool, Default: false},
		{Name: "is_read", Type: field.TypeBool, Default: false},
		{Name: "is_updated", Type: field.TypeBool, Default: false},
	}
	// FollowListsTable holds the schema information for the "follow_lists" table.
	FollowListsTable = &schema.Table{
		Name:       "follow_lists",
		Columns:    FollowListsColumns,
		PrimaryKey: []*schema.Column{FollowListsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "followlist_uuid",
				Unique:  true,
				Columns: []*schema.Column{FollowListsColumns[1]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "username", Type: field.TypeString},
		{Name: "hashed_password", Type: field.TypeBytes},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "users_id",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[0]},
			},
			{
				Name:    "users_username",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CooccurrenceNetworkPoolsTable,
		FeedAuditTrailActionsTable,
		FeedAuditTrailLogsTable,
		FeedsTable,
		FollowListsTable,
		UsersTable,
	}
)

func init() {
	FeedAuditTrailLogsTable.ForeignKeys[0].RefTable = FeedAuditTrailActionsTable
}
