// Code generated by ent, DO NOT EDIT.

package cooccurrencenetworkpool

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the cooccurrencenetworkpool type in the database.
	Label = "cooccurrence_network_pool"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSiteURL holds the string denoting the site_url field in the database.
	FieldSiteURL = "site_url"
	// FieldTitles holds the string denoting the titles field in the database.
	FieldTitles = "titles"
	// FieldDescriptions holds the string denoting the descriptions field in the database.
	FieldDescriptions = "descriptions"
	// Table holds the table name of the cooccurrencenetworkpool in the database.
	Table = "cooccurrence_network_pool"
)

// Columns holds all SQL columns for cooccurrencenetworkpool fields.
var Columns = []string{
	FieldID,
	FieldSiteURL,
	FieldTitles,
	FieldDescriptions,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// SiteURLValidator is a validator for the "site_url" field. It is called by the builders before save.
	SiteURLValidator func(string) error
	// DefaultTitles holds the default value on creation for the "titles" field.
	DefaultTitles []string
	// DefaultDescriptions holds the default value on creation for the "descriptions" field.
	DefaultDescriptions []string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the CooccurrenceNetworkPool queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// BySiteURL orders the results by the site_url field.
func BySiteURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSiteURL, opts...).ToFunc()
}
